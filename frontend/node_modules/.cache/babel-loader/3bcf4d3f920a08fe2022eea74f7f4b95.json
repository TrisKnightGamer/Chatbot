{"ast":null,"code":"import _defineProperty from\"C:/Users/Trihd/OneDrive/chatbot_NEW/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"C:/Users/Trihd/OneDrive/chatbot_NEW/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Trihd/OneDrive/chatbot_NEW/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:/Users/Trihd/OneDrive/chatbot_NEW/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/Trihd/OneDrive/chatbot_NEW/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:/Users/Trihd/OneDrive/chatbot_NEW/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:/Users/Trihd/OneDrive/chatbot_NEW/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/Trihd/OneDrive/chatbot_NEW/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{TextField}from\"@material-ui/core\";import SpeechRecognition,{useSpeechRecognition}from'react-speech-recognition';// import Icon  from \"@material-ui/icons\";\nimport'./style.css';// eslint-disable-next-line\nfunction Hook(Component){return function WrappedComponent(props){var transcript=useSpeechRecognition();var resetTranscript=useSpeechRecognition();return/*#__PURE__*/React.createElement(Component,Object.assign({},props,{transcript:transcript,resetTranscript:resetTranscript}));};}var SendMessageForm=/*#__PURE__*/function(_Component){_inherits(SendMessageForm,_Component);var _super=_createSuper(SendMessageForm);function SendMessageForm(props){var _this;_classCallCheck(this,SendMessageForm);_this=_super.call(this);_this.state={message:\"\",alert:true};_this.handleEnter=_this.handleEnter.bind(_assertThisInitialized(_this));_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));_this.onChange=_this.onChange.bind(_assertThisInitialized(_this));_this.handleButtonPress=_this.handleButtonPress.bind(_assertThisInitialized(_this));_this.handleButtonRelease=_this.handleButtonRelease.bind(_assertThisInitialized(_this));return _this;}_createClass(SendMessageForm,[{key:\"handleSubmit\",value:function(){var _handleSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();_context.next=3;return this.setState({message:this.state.message.replace(/(\\r\\n|\\n|\\r)/gm,\"\")});case 3:if(!(this.state.message===\"\")){_context.next=7;break;}return _context.abrupt(\"return\");case 7:fetch('http://0.0.0.0:5000/api/v1/messages',{method:'POST',headers:{'Content-Type':'application/json',Accept:'application/json'},body:JSON.stringify({content:this.state.message,isBot:false,time:new Date().getTime()/1000})}).then(function(res){if(res.status===200){console.log(\"Send message successfully\");res.json().then(function(postResponse){console.log(postResponse);fetch('http://0.0.0.0:5000/api/v1/messages/reply',{method:'POST',headers:{'Content-Type':'application/json',Accept:'application/json'},body:JSON.stringify({content:postResponse.content,isBot:false,time:new Date().getTime()/1000})}).then(function(res){if(res.status===200){console.log(\"Wait for reply ...\");}else{console.log(\"Some error occured\");}});});}else{console.log(\"Some error occured\");}}).then(this.setState({message:\"\"}));case 8:case\"end\":return _context.stop();}}},_callee,this);}));function handleSubmit(_x){return _handleSubmit.apply(this,arguments);}return handleSubmit;}()},{key:\"handleEnter\",value:function handleEnter(e){if(e.keyCode===13){return this.handleSubmit(e);}return;}},{key:\"onChange\",value:function onChange(e){this.setState(_defineProperty({},e.target.name,e.target.value));}},{key:\"handleButtonPress\",value:function handleButtonPress(){var buttonPressTimer;if(this.state.alert){buttonPressTimer=setTimeout(function(){return SpeechRecognition.startListening({continuous:true});},200);}else{clearTimeout(buttonPressTimer);}}},{key:\"handleButtonRelease\",value:function handleButtonRelease(){this.setState({alert:false});}},{key:\"render\",value:function render(){if(!SpeechRecognition.browserSupportsSpeechRecognition()){return null;}return/*#__PURE__*/React.createElement(\"div\",{className:\"SendMessageForm\"},/*#__PURE__*/React.createElement(\"div\",{className:\"chat-input-width-100\"},/*#__PURE__*/React.createElement(\"form\",{className:\"MessageForm\",onKeyUp:this.handleEnter},/*#__PURE__*/React.createElement(TextField,{name:\"message\",id:\"outlined-multiline-static\",fullWidth:false,multiline:true,rows:\"4\",value:this.state.message,placeholder:\"Type something here\",className:\"chat-input\",style:{width:\"925px\"},margin:\"normal\",variant:\"outlined\",onChange:this.onChange}),/*#__PURE__*/React.createElement(\"img\",{src:\"voice.png\",alt:\"button\",onTouchStart:this.handleButtonPress,onTouchEnd:SpeechRecognition.stopListening,onMouseDown:this.handleButtonPress,onMouseUp:SpeechRecognition.stopListening,onMouseLeave:SpeechRecognition.stopListening,style:{height:30+'px',width:30+'px',marginTop:15+'px'}}),/*#__PURE__*/React.createElement(\"p\",{hidden:true},setInterval(this.props.resetTranscript,1000)),/*#__PURE__*/React.createElement(\"p\",null,this.props.transcript))));}}]);return SendMessageForm;}(Component);export{SendMessageForm as default};","map":{"version":3,"sources":["C:/Users/Trihd/OneDrive/chatbot_NEW/frontend/src/components/SendMessageForm/index.js"],"names":["React","Component","TextField","SpeechRecognition","useSpeechRecognition","Hook","WrappedComponent","props","transcript","resetTranscript","SendMessageForm","state","message","alert","handleEnter","bind","handleSubmit","onChange","handleButtonPress","handleButtonRelease","e","preventDefault","setState","replace","fetch","method","headers","Accept","body","JSON","stringify","content","isBot","time","Date","getTime","then","res","status","console","log","json","postResponse","keyCode","target","name","value","buttonPressTimer","setTimeout","startListening","continuous","clearTimeout","browserSupportsSpeechRecognition","width","stopListening","height","marginTop","setInterval"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {TextField} from \"@material-ui/core\";\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition'\n// import Icon  from \"@material-ui/icons\";\nimport './style.css'\n\n// eslint-disable-next-line\nfunction Hook(Component) {\n    return function WrappedComponent(props) {\n      const transcript = useSpeechRecognition()\n      const resetTranscript = useSpeechRecognition()\n      return <Component {...props} transcript={transcript} resetTranscript={resetTranscript} />;\n    }\n}\n\n\n\nexport default class SendMessageForm extends Component  {\n    constructor(props) {\n        super();\n        this.state = {\n            message: \"\",\n            alert:true\n        }\n        this.handleEnter = this\n            .handleEnter\n            .bind(this)\n        this.handleSubmit = this\n            .handleSubmit\n            .bind(this)\n        this.onChange = this\n            .onChange\n            .bind(this)\n        this.handleButtonPress = this\n            .handleButtonPress\n            .bind(this)\n        this.handleButtonRelease = this\n            .handleButtonRelease\n            .bind(this)\n    }\n    async handleSubmit(e) {\n        e.preventDefault()\n        await this.setState({\n            message: this\n                .state\n                .message\n                .replace(/(\\r\\n|\\n|\\r)/gm, \"\")\n        })\n\n        if (this.state.message === \"\") {\n            return\n        } else {\n            fetch('http://0.0.0.0:5000/api/v1/messages', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Accept: 'application/json'\n                },\n                body: JSON.stringify({\n                    content: this.state.message,\n                    isBot: false,\n                    time: (new Date().getTime()) / 1000\n                })\n            }).then(res => {\n                if (res.status === 200) {\n                    console.log(\"Send message successfully\")\n                    res\n                        .json()\n                        .then(postResponse => {\n                            console.log(postResponse);\n                            \n                            fetch('http://0.0.0.0:5000/api/v1/messages/reply', {\n                                method: 'POST',\n                                headers: {\n                                    'Content-Type': 'application/json',\n                                    Accept: 'application/json'\n                                },\n                                body: JSON.stringify({\n                                    content: postResponse.content,\n                                    isBot: false,\n                                    time: (new Date().getTime()) / 1000\n                                })\n                            }).then(res => {\n                                if (res.status === 200) {\n                                    console.log(\"Wait for reply ...\")\n                                } else {\n                                    console.log(\"Some error occured\");\n\n                                }\n                            })\n                        })\n\n                } else {\n                    console.log(\"Some error occured\");\n                }\n            }).then(this.setState({message: \"\"}))\n\n        }\n\n    }\n    handleEnter(e) {\n        if (e.keyCode === 13) {\n            return this.handleSubmit(e)\n        }\n        return\n    }\n    onChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n    handleButtonPress () {\n        let buttonPressTimer\n        if(this.state.alert){\n            buttonPressTimer = setTimeout(() => SpeechRecognition.startListening({continuous: true }), 200);\n        }\n        else{\n            clearTimeout(buttonPressTimer);\n        }\n    }\n    \n    handleButtonRelease () {\n\n        this.setState({\n            alert:false\n        })\n    }\n\n    render() {\n        if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n            return null\n        }\n        return (\n            <div className=\"SendMessageForm\">\n                <div className=\"chat-input-width-100\">\n                    <form className=\"MessageForm\" onKeyUp={this.handleEnter}>\n                        <TextField\n                            name=\"message\"\n                            id=\"outlined-multiline-static\"\n                            fullWidth={false}\n                            multiline\n                            rows=\"4\"\n                            value={this.state.message}\n                            placeholder=\"Type something here\"\n                            className=\"chat-input\"\n                            style={{\n                                width:\"925px\"\n                            }}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            onChange={this.onChange}/>   \n                        <img src=\"voice.png\" alt=\"button\" onTouchStart={this.handleButtonPress} \n                                onTouchEnd={SpeechRecognition.stopListening} \n                                onMouseDown={this.handleButtonPress} \n                                onMouseUp={SpeechRecognition.stopListening} \n                                onMouseLeave={SpeechRecognition.stopListening} style={{height:30+'px', width:30+'px', marginTop:15+'px'}}/>\n                        <p hidden>\n                            {setInterval(this.props.resetTranscript,1000)}\n                        </p>\n                        <p>{this.props.transcript}</p>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}